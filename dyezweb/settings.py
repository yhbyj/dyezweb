"""
Django settings for dyezweb project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# 新增apps, extra_apps等python包
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+ir^g&necnxysc*)ujri#0vg#8wg!%aa2(^50mwfyfjvm(3upj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',  # drf 框架
    'rest_framework.authtoken',
    'core',  # 核心模块
    'users',  # 自定义用户模块
    'students',  # 学生模块
    'clazzs',  # 班级模块 (避开关键字class)
    'majors',  # 专业模块
    # 'services',  # 服务模块
    'areas',   # 省市区模块
    'admissions',   # 网上入学报名模块
    'guardians',  # 监护人模块
    # 'accounts',   # 账户模块（自定义用户模块）
    'three_competitions',  # 三项竞赛模块
    'dorms',  # 寝室管理模块
    # 'xadmin',  # 后台管理模块
    # 'crispy-forms', # OSError: [WinError 123] 文件名、目录名或卷标语法不正确
    # together with xadmin
    # 'crispy_forms',
    # 'django_filters',
    # 'tinymce',  # 富文本编辑器
    # 'DjangoUeditor',  # 富文本编辑器
    # 'social_django',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dyezweb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 第三方登录，配置这里，当用户登录的时候，如果用户不存在，会自动在用户表创建用户，并且关联用户信息
                # 'social_django.context_processors.backends',
                # 'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'dyezweb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': os.environ.get('DB_HOST'),
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASS'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = "/media/"

MEDIA_ROOT = os.path.join(BASE_DIR, "media")

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    # ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
}

# 修改Django认证系统中的用户模型
AUTH_USER_MODEL = 'core.User'  # 应用名称.模型类名称

# 云片网设置
APIKEY = ''

# 手机号码正则表达式
REGEX_MOBILE = "^1[358]\d{9}$|^147\d{8}$|^176\d{8}$"


# 设置要使用的第三方登录
# 设置自定义登录：邮箱和用户名和手机号均可登录
# AUTHENTICATION_BACKENDS = (
#     'social_core.backends.weibo.WeiboOAuth2',
#     'social_core.backends.qq.QQOAuth2',
#     'social_core.backends.weixin.WeixinOAuth2',
#     # 'users.views.CustomBackend',
#     'accounts.views.CustomBackend',
#     'django.contrib.auth.backends.ModelBackend',
# )

# 配置微博开放平台授权
# SOCIAL_AUTH_要使用登录模块的名称_KEY，其他如QQ相同
# SOCIAL_AUTH_WEIBO_KEY = '478178675'
# SOCIAL_AUTH_WEIBO_SECRET = '78a7e4529bd716e36ad12f1680d426fc'

# 登录成功后跳转页面
# SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/index/'
# SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/accounts'