# Generated by Django 2.2.12 on 2020-05-27 23:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('areas', '0002_auto_20200514_0825'),
        ('core', '0002_auto_20200527_0215'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=50, verbose_name='姓名')),
                ('sex', models.SmallIntegerField(choices=[(0, '男'), (1, '女')], default=0, verbose_name='性别')),
                ('hukou', models.SmallIntegerField(choices=[(0, '农'), (1, '非农')], default=0, verbose_name='户口性质')),
                ('nationality', models.SmallIntegerField(choices=[(0, '汉族'), (1, '蒙古族'), (2, '回族'), (3, '藏族'), (4, '维吾尔族'), (5, '苗族'), (6, '彝族'), (7, '壮族'), (8, '布依族'), (9, '朝鲜族'), (10, '满族'), (11, '侗族'), (12, '瑶族'), (13, '白族'), (14, '土家族'), (15, '哈尼族'), (16, '哈萨克族'), (17, '傣族'), (18, '黎族'), (19, '僳僳族'), (20, '佤族'), (21, '畲族'), (22, '高山族'), (23, '拉祜族'), (24, '水族'), (25, '东乡族'), (26, '纳西族'), (27, '景颇族'), (28, '柯尔克孜族'), (29, '土族'), (30, '达斡尔族'), (31, '仫佬族'), (32, '羌族'), (33, '布朗族'), (34, '撒拉族'), (35, '毛南族'), (36, '仡佬族'), (37, '锡伯族'), (38, '阿昌族'), (39, '普米族'), (40, '塔吉克族'), (41, '怒族'), (42, '乌孜别克族'), (43, '俄罗斯族'), (44, '鄂温克族'), (45, '德昂族'), (46, '保安族'), (47, '裕固族'), (48, '京族'), (49, '塔塔尔族'), (50, '独龙族'), (51, '鄂伦春族'), (52, '赫哲族'), (53, '门巴族'), (54, '珞巴族'), (55, '基诺族')], default=0, verbose_name='民族')),
                ('native_place', models.CharField(blank=True, default='浙江东阳', max_length=50, verbose_name='籍贯')),
                ('id_card_no', models.CharField(max_length=18, validators=[django.core.validators.RegexValidator('\\d{17}\\w{1}', message='请输入正确格式的身份证号码！')], verbose_name='身份证号码')),
                ('political_status', models.SmallIntegerField(choices=[(0, '群众'), (1, '团员')], default=0, verbose_name='政治面貌')),
                ('health_status', models.SmallIntegerField(choices=[(0, '健康或良好'), (1, '一般或较弱')], default=0, verbose_name='健康状况')),
                ('origin', models.SmallIntegerField(choices=[(0, '应届'), (1, '往届')], default=0, verbose_name='学生来源')),
                ('parent_name', models.CharField(max_length=50, verbose_name='家长姓名')),
                ('graduate_school', models.SmallIntegerField(choices=[(0, '安恬初中'), (1, '八达中小学'), (2, '春蕾学校'), (3, '大联初级中学\u3000'), (4, '东江镇中'), (5, '东阳市横店第二初级中学'), (6, '东阳市横店第三初级中学\u3000'), (7, '东阳市横店镇爱心学校'), (8, '防军初级中学'), (9, '歌山一中'), (10, '郭宅初中'), (11, '横店镇第一初级中学'), (12, '湖溪镇中'), (13, '虎鹿镇初级中学'), (14, '画水镇初级中学'), (15, '画溪初中'), (16, '怀鲁初中'), (17, '槐堂初中'), (18, '李宅初中'), (19, '六石街道初级中学'), (20, '马宅初中'), (21, '南马镇初级中学'), (22, '南溪初级中学'), (23, '千祥初级中学'), (24, '三单初中'), (25, '三联初中'), (26, '上村初级中学'), (27, '上卢初中'), (28, '唐表初中'), (29, '塘西初中'), (30, '亭塘初中'), (31, '巍山镇中'), (32, '吴宁二中'), (33, '吴宁三中'), (34, '吴宁四中'), (35, '吴宁一中'), (36, '象岗初中'), (37, '樟村初中'), (38, '佐村镇中')], default=0, verbose_name='初中毕业学校')),
                ('position', models.CharField(blank=True, max_length=50, verbose_name='担任职务')),
                ('filler', models.CharField(blank=True, max_length=50, null=True, verbose_name='填表人')),
                ('adviser', models.CharField(blank=True, max_length=50, null=True, verbose_name='推荐人')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='家庭住址')),
                ('zip_code', models.CharField(blank=True, max_length=6, null=True, validators=[django.core.validators.RegexValidator('\\d{6}', message='请输入正确格式的邮政编码！')], verbose_name='邮编')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator('1[345678]\\d{9}', message='请输入正确格式的手机号码！')], verbose_name='手机号码')),
                ('telephone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='电话号码')),
                ('confirmed', models.BooleanField(default=False, verbose_name='预报名确认状态')),
                ('confirmed_with', models.TextField(default='你已成功预报名，需网上报名时再次确认，优先录取。', max_length=200, verbose_name='确认文书')),
                ('confirmed_by', models.CharField(blank=True, max_length=50, null=True, verbose_name='确认人')),
                ('confirmed_on', models.DateField(blank=True, null=True, verbose_name='确认日期')),
                ('memo', models.TextField(blank=True, max_length=200, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '入学申请（报名）',
                'verbose_name_plural': '入学申请（报名）',
            },
        ),
        migrations.CreateModel(
            name='Clazz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('title', models.CharField(max_length=50, verbose_name='名称')),
                ('status', models.SmallIntegerField(choices=[(0, '下线'), (1, '上线')], default=1, verbose_name='班级状态')),
            ],
            options={
                'verbose_name': '班级',
                'verbose_name_plural': '班级',
                'db_table': 'tb_clazz',
            },
        ),
        migrations.CreateModel(
            name='Dormitory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('short_code', models.CharField(max_length=3, verbose_name='寝室编号')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='寝室名称')),
                ('beds', models.SmallIntegerField(default=10, verbose_name='床位数')),
                ('with_bathroom', models.BooleanField(default=True, verbose_name='是否带卫生间')),
                ('building', models.SmallIntegerField(choices=[(6, '6号楼'), (7, '7号楼'), (8, '8号楼')], default=7, verbose_name='所属楼栋')),
            ],
            options={
                'verbose_name': '寝室',
                'verbose_name_plural': '寝室',
            },
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=50, verbose_name='姓名')),
            ],
            options={
                'verbose_name': '监护人',
                'verbose_name_plural': '监护人',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('short_code', models.CharField(max_length=2, verbose_name='专业编号')),
                ('name', models.CharField(max_length=50, verbose_name='专业名称')),
                ('status', models.SmallIntegerField(choices=[(0, '下线'), (1, '上线')], default=1, verbose_name='专业状态')),
                ('quota', models.IntegerField(default=35, verbose_name='招生人数')),
                ('code', models.CharField(blank=True, max_length=6, null=True, verbose_name='专业代码')),
            ],
            options={
                'verbose_name': '专业',
                'verbose_name_plural': '专业',
            },
        ),
        migrations.CreateModel(
            name='ThreeCompetitionRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=50, verbose_name='三项竞赛评分细则名称')),
                ('code', models.CharField(blank=True, max_length=6, null=True, verbose_name='三项竞赛评分细则代码')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='三项竞赛评分细则描述')),
                ('min', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='评分区间下限')),
                ('max', models.DecimalField(decimal_places=2, default=5.0, max_digits=3, verbose_name='评分区间上限')),
            ],
            options={
                'verbose_name': '三项竞赛评分细则',
                'verbose_name_plural': '三项竞赛评分细则',
            },
        ),
        migrations.CreateModel(
            name='ThreeCompetitionRuleOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=50, verbose_name='选项名称')),
                ('value', models.CharField(max_length=50, verbose_name='选项值')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ThreeCompetitionRule', verbose_name='三项竞赛评分细则')),
            ],
            options={
                'verbose_name': '三项竞赛评分细则选项',
                'verbose_name_plural': '三项竞赛评分细则选项',
            },
        ),
        migrations.CreateModel(
            name='ThreeCompetitionRuleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=50, verbose_name='三项竞赛评分细则类别')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='类别描述')),
                ('category_type', models.SmallIntegerField(choices=[(1, '一级类别'), (2, '二级类别')], default=2, verbose_name='类别级别')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_cat', to='core.ThreeCompetitionRuleCategory', verbose_name='父类别')),
            ],
            options={
                'verbose_name': '三项竞赛评分细则类别',
                'verbose_name_plural': '三项竞赛评分细则类别',
            },
        ),
        migrations.AddField(
            model_name='threecompetitionrule',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ThreeCompetitionRuleCategory', verbose_name='三项竞赛评分细则类别'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=50, verbose_name='姓名')),
                ('gender', models.SmallIntegerField(choices=[(0, '男'), (1, '女')], default=0, verbose_name='性别')),
                ('status', models.SmallIntegerField(choices=[(0, '下线'), (1, '上线')], default=1, verbose_name='学生状态')),
                ('clazz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Clazz', verbose_name='班级')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Major', verbose_name='专业')),
            ],
            options={
                'verbose_name': '学生',
                'verbose_name_plural': '学生',
            },
        ),
        migrations.CreateModel(
            name='MajorCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=50, verbose_name='专业类别')),
                ('desc', models.TextField(default='', verbose_name='类别描述')),
                ('category_type', models.SmallIntegerField(choices=[(1, '一级类别'), (2, '二级类别')], default=2, verbose_name='类别级别')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_cat', to='core.MajorCategory', verbose_name='父类别')),
            ],
            options={
                'verbose_name': '专业类别',
                'verbose_name_plural': '专业类别',
            },
        ),
        migrations.AddField(
            model_name='major',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.MajorCategory', verbose_name='专业类别'),
        ),
        migrations.CreateModel(
            name='GuardianAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('title', models.CharField(max_length=20, verbose_name='地址名称')),
                ('place', models.CharField(max_length=50, verbose_name='地址')),
                ('mobile', models.CharField(max_length=11, verbose_name='手机')),
                ('tel', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='固定电话')),
                ('email', models.CharField(blank=True, default='', max_length=30, null=True, verbose_name='电子邮箱')),
                ('zip_code', models.CharField(max_length=6, verbose_name='邮政编码')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='city_addresses', to='areas.Area', verbose_name='市')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='district_addresses', to='areas.Area', verbose_name='区')),
                ('guardian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='core.Guardian', verbose_name='监护人')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='province_addresses', to='areas.Area', verbose_name='省')),
            ],
            options={
                'verbose_name': '监护人地址',
                'verbose_name_plural': '监护人地址',
                'ordering': ['-update_time'],
            },
        ),
        migrations.CreateModel(
            name='DormitoryCompetition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='评分')),
                ('is_minus', models.BooleanField(default=True, verbose_name='是否扣分')),
                ('dormitory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Dormitory', verbose_name='寝室')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ThreeCompetitionRuleOption', verbose_name='三项竞赛评分细则选项')),
            ],
            options={
                'verbose_name': '寝室竞赛',
                'verbose_name_plural': '寝室竞赛',
            },
        ),
        migrations.CreateModel(
            name='AdmissionMajor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('admission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admissions', to='core.Admission', verbose_name='入学申请')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='majors', to='core.Major', verbose_name='专业')),
            ],
            options={
                'verbose_name': '入学申请专业',
                'verbose_name_plural': '入学申请专业',
            },
        ),
        migrations.AddField(
            model_name='admission',
            name='majors',
            field=models.ManyToManyField(through='core.AdmissionMajor', to='core.Major', verbose_name='专业'),
        ),
        migrations.AddField(
            model_name='admission',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
    ]
